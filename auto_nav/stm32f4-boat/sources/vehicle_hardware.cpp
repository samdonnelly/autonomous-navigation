/**
 * @file vehicle_hardware.cpp
 * 
 * @author Sam Donnelly (samueldonnelly11@gmail.com)
 * 
 * @brief Vehicle hardware 
 * 
 * @details This 
 * 
 * @version 0.1
 * @date 2025-02-27
 * 
 * @copyright Copyright (c) 2025
 * 
 */

//=======================================================================================
// Include 

#include "boat.h" 

//=======================================================================================


//=======================================================================================
// Initialization 

void VehicleHardware::HardwareSetup(void *vehicle_data)
{
    Boat *boat_instance = (Boat *)vehicle_data; 
}

//=======================================================================================


//=======================================================================================
// GPS 

void VehicleHardware::GPS_Read(void *vehicle_data)
{
    // 
}


void VehicleHardware::GPS_Get(void *vehicle_data)
{
    // 
}

//=======================================================================================


//=======================================================================================
// Compass 

void VehicleHardware::CompassRead(void *vehicle_data)
{
    // 
}

//=======================================================================================


//=======================================================================================
// IMU 

void VehicleHardware::IMU_Read(void *vehicle_data)
{
    // 
}

//=======================================================================================


//=======================================================================================
// Telemetry 

void VehicleHardware::TelemetryRead(void *vehicle_data)
{
    // 
}


void VehicleHardware::TelemetryWrite(void *vehicle_data)
{
    // 
}

//=======================================================================================


//=======================================================================================
// RC 

void VehicleHardware::RC_Read(void *vehicle_data)
{
    // 
}

//=======================================================================================


//=======================================================================================
// Memory 

void VehicleHardware::MemoryRead(void *vehicle_data)
{
    // 
}


void VehicleHardware::MemoryWrite(void *vehicle_data)
{
    // 
}

//=======================================================================================


//=======================================================================================
// Rangefinder 

void VehicleHardware::RangefinderRead(void *vehicle_data)
{
    // 
}

//=======================================================================================
